<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<description>数据库相关配置</description>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:sysConfig_product.properties</value>
			</list>
		</property>
	</bean>

	<!-- jndi -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/empi_jx" />
		<property name="lookupOnStartup" value="false" />
		<property name="cache" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>

	<!-- 配置mybatis的 SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 设置mybatis的环境配置文件 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>

	<!-- 指定mybatis映射器的位置，spring自动扫描并将映射器生成代理放到spring上下文中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zebone.empi.dao" />
		<property name="annotationClass" value="com.zebone.btp.core.mybatis.Mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!--定义数据源 -->
	<bean id="dcDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/dc_jx" />
		<property name="lookupOnStartup" value="false" />
		<property name="cache" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>

	<bean id="dcSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dcDataSource" />
		<!-- 设置mybatis的环境配置文件 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>

	<!-- 指定mybatis映射器的位置，spring自动扫描并将映射器生成代理放到spring上下文中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zebone.empi.dao" />
		<property name="annotationClass" value="com.zebone.btp.core.mybatis.DcMapper" />
		<property name="sqlSessionFactoryBeanName" value="dcSqlSessionFactory" />
	</bean>


	<!--定义数据源 -->
	<bean id="wrcDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/wrc_jx" />
		<property name="lookupOnStartup" value="false" />
		<property name="cache" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>
	

	<bean id="wrcSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="wrcDataSource" />
		<!-- 设置mybatis的环境配置文件 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>

	<!-- 指定mybatis映射器的位置，spring自动扫描并将映射器生成代理放到spring上下文中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zebone.empi.dao" />
		<property name="annotationClass" value="com.zebone.btp.core.mybatis.WrcMapper" />
		<property name="sqlSessionFactoryBeanName" value="wrcSqlSessionFactory" />
	</bean>


	
    <bean id="dipDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/dip_jx" />
		<property name="lookupOnStartup" value="false" />
		<property name="cache" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
	</bean>
	

	<bean id="dipSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dipDataSource" />
		<!-- 设置mybatis的环境配置文件 -->
		<property name="configLocation" value="classpath:mybatisConfig.xml" />
	</bean>

	<!-- 指定mybatis映射器的位置，spring自动扫描并将映射器生成代理放到spring上下文中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zebone.empi.dao" />
		<property name="annotationClass" value="com.zebone.btp.core.mybatis.DipMapper" />
		<property name="sqlSessionFactoryBeanName" value="dipSqlSessionFactory" />
	</bean>


    <!-- 
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.WebSphereUowTransactionManager">
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	 -->


</beans>