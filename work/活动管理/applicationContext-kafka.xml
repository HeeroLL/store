<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	xmlns:int="http://www.springframework.org/schema/integration"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<int:channel id="kafkaProducerChannel">
		<int:queue />
	</int:channel>

	<!-- topic-expression="headers.topic != null ? headers.topic : 'myTopic'". -->
	<int-kafka:outbound-channel-adapter
		id="kafkaOutboundChannelAdapter" kafka-template="kafkaTemplate"
		auto-startup="true" channel="kafkaProducerChannel" topic-expression="headers.kafka_topic">
		<int:poller default="true" fixed-delay="1000" />
	</int-kafka:outbound-channel-adapter>

	<bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg>
			<bean class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
				<constructor-arg>
					<map>
						<entry key="bootstrap.servers" value="${kafka.broker.address}" />

						<!-- 0：不进行消息接收确认，即Client端发送完成后不会等待Broker的确认 -->
						<!-- 1：由Leader确认，Leader接收到消息后会立即返回确认信息 -->
						<!-- all：集群完整确认，Leader会等待所有in-sync的follower节点都确认收到消息后，再返回确认信息 我们可以根据消息的重要程度，设置不同的确认模式。默认为1 -->
						<entry key="acks" value="1" />

						<!-- 重试次数 -->
						<entry key="retries" value="10" />

						<!-- 压缩参数 -->
						<entry key="compression.type" value="gzip" />

						<!-- 当同时有大量消息要向同一个分区发送时，Producer端会将消息打包后进行批量发送。如果设置为0，则每条消息都独立发送。默认为16384字节 -->
						<entry key="batch.size" value="16384" />

						<!-- 发送消息前等待的毫秒数，与batch.size配合使用。在消息负载不高的情况下，配置linger.ms能够让Producer在发送消息前等待一定时间，以积累更多的消息打包发送，达到节省网络资源的目的。默认为0 -->
						<entry key="linger.ms" value="100" />

						<!-- 消息缓冲池大小。尚未被发送的消息会保存在Producer的内存中，如果消息产生的速度大于消息发送的速度，那么缓冲池满后发送消息的请求会被阻塞。默认33554432字节（32MB） -->
						<entry key="buffer.memory" value="33554432" />

						<entry key="key.serializer"
							value="org.apache.kafka.common.serialization.StringSerializer" />
						<entry key="value.serializer"
							value="org.apache.kafka.common.serialization.StringSerializer" />
						<entry key="value.serializer"
							value="org.apache.kafka.common.serialization.StringSerializer" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>

</beans>