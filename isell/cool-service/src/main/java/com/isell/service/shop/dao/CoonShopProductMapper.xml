<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isell.service.shop.dao.CoonShopProductMapper">
    <resultMap id="BaseResultMap" type="com.isell.service.shop.vo.CoonShopProduct">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="p_id" jdbcType="VARCHAR" property="pId"/>
        <result column="added" jdbcType="BIT" property="added"/>
        <result column="s_id" jdbcType="VARCHAR" property="sId"/>
        <result column="qr_code" jdbcType="VARCHAR" property="qrCode"/>
        <result column="brokerage" jdbcType="DECIMAL" property="brokerage"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <result column="is_new" jdbcType="VARCHAR" property="isNew"/>
    </resultMap>
    <!-- 酷店商品返回类 -->
    <resultMap id="CoonShopProductInfoMap" type="com.isell.service.shop.po.CoonShopProductInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="name_en" jdbcType="VARCHAR" property="nameEn"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="logo" jdbcType="VARCHAR" property="logo"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="gg" jdbcType="VARCHAR" property="gg"/>
        <result column="jg" jdbcType="DECIMAL" property="jg"/>
        <result column="cxjg" jdbcType="DECIMAL" property="cxjg"/>
        <result column="xsjg" jdbcType="DECIMAL" property="xsjg"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="salesMonth" jdbcType="INTEGER" property="salesMonth"/>
        <result column="drp_price" jdbcType="DECIMAL" property="drpPrice"/>
        <result column="divide" jdbcType="DECIMAL" property="divide"/>   
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <result column="is_new" jdbcType="VARCHAR" property="isNew"/>
        <result column="shelves" jdbcType="BIT" property="shelves"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
    </resultMap>
    <select id="getCoonShopProductById" resultMap="BaseResultMap">
        SELECT
            *
        FROM
             coon_shop_product
        WHERE            
            id = #{id,jdbcType=VARCHAR}
    </select>
    
    <!-- 随机获取上架商品 -->
    <select id="getShopProductRandList" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*
		  from
          (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime,s.order,s.is_new,p.shelves
          FROM coon_shop_product s
          left join cool_product p on p.id = s.p_id
          left join cool_product_gg g on g.goods_id = p.id          
          where g.stock > 0 and s.added = 1 and p.shelves = 0
          <if test="sId != null and sId != ''">
          	and s.s_id = #{sId,jdbcType=VARCHAR}
          </if>
          <if test="isNew != null and isNew != ''">
          	and s.is_new = #{isNew,jdbcType=VARCHAR}
          </if>
          order by s.order) a order by rand()  limit #{showCount}
    </select>
    
    <!-- 查询热销商品列表 -->
    <select id="getHotSellProductList" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*,ifnull(b.salesMonth,0) as salesMonth
		  from
          (select g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime
          from
          (select i.g_id,i.gid
          from cool_order o
          inner join cool_order_item i on o.order_no = i.order_no
          where o.supplier =  #{sId,jdbcType=VARCHAR}  and (o.state = 2 or o.state = 3 or o.state = 4 or o.state = 5 or o.state = 11)
          group by  i.g_id,i.gid
          order by sum(i.count * i.price) desc  limit #{showCount,jdbcType=INTEGER}) oi
          left join cool_product p on p.id = oi.g_id
          left join cool_product_gg g on g.id = oi.gid) a
          left join
			(SELECT i.gid,sum(i.count) as salesMonth  from cool_order_item i
			inner join cool_order o on o.order_no = i.order_no 
			where left(o.createtime,7) = left(now(),7) and (o.state=0 or o.state=1 or o.state=2 or o.state=3 or o.state=1 or o.state=11)
			 group by  i.gid) b on b.gid = a.id          
    </select>
    
    <!-- 分页获取商品列表 -->
    <select id="getCoonShopProductInfoListPage" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*,ifnull(b.salesMonth,0) as salesMonth
		  from
          (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,if(g.drp_price>0,g.drp_price,g.cxjg) as drp_price,p.divide,p.createtime,g.stock,p.content
          FROM cool_product_gg g
          left join cool_product p on g.goods_id = p.id
          where 1=1 
				<!--           g.stock > 0  -->
          <if test="type != null">
          	and p.type = #{type,jdbcType=INTEGER}
          </if>
          <if test="name != null and name != ''">
          	and (p.name  like CONCAT(CONCAT('%', #{name}), '%')  or p.name_en  like CONCAT(CONCAT('%', #{name}), '%'))
          </if>
          <if test="pId != null and pId != ''">
          	and p.id = #{pId,jdbcType=VARCHAR}
          </if>
          <if test="gId != null and gId != ''">
          	and g.id = #{gId,jdbcType=VARCHAR}
          </if>
          <!-- 该字符串由两位组成 第一位：1:佣金  2：售价 3:销量 默认按佣金；第二位：1：升序  2：降序 默认降序 -->
          <if test="orderBy == '11'.toString()">
          	order by ifnull(g.cxjg,g.jg) * p.divide asc
          </if>
          <if test="orderBy == '12'.toString()">
          	order by ifnull(g.cxjg,g.jg) * p.divide desc
          </if>
          <if test="orderBy == '21'.toString()">
          	order by ifnull(g.cxjg,g.jg) asc
          </if>
          <if test="orderBy == '22'.toString()">
          	order by ifnull(g.cxjg,g.jg) desc
          </if>
          <if test="orderBy == '31'.toString()">
            order by g.sales asc
          </if>
          <if test="orderBy == '32'.toString()">
            order by g.sales desc
          </if>
          ) a
          left join
			(SELECT i.gid,sum(i.count) as salesMonth  
			from cool_order_item i
			inner join cool_order o on o.order_no = i.order_no 
			where left(o.createtime,7) = left(now(),7) and (o.state=0 or o.state=1 or o.state=2 or o.state=3 or o.state=1 or o.state=11)
			 group by  i.gid) b on b.gid = a.id
    </select>
    
    <!-- 分页查询已上架商品信息 -->
    <select id="getCoonShopProductAddedListPage" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*,ifnull(b.salesMonth,0) as salesMonth
		  from
          (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime,s.order,s.is_new,p.shelves
          FROM coon_shop_product s
          left join cool_product p on p.id = s.p_id
          left join cool_product_gg g on g.goods_id = p.id          
          where g.stock > 0 and s.added = 1
          <if test="sId != null and sId != ''">
          	and s.s_id = #{sId,jdbcType=VARCHAR}
          </if>
          <if test="isNew != null and isNew != ''">
          	and s.is_new = #{isNew,jdbcType=VARCHAR}
          </if>
          order by s.order) a
          left join
			(SELECT i.gid,sum(i.count) as salesMonth  from cool_order_item i
			inner join cool_order o on o.order_no = i.order_no 
			where left(o.createtime,7) = left(now(),7) and (o.state=0 or o.state=1 or o.state=2 or o.state=3 or o.state=1 or o.state=11)
			 group by  i.gid) b on b.gid = a.id
    </select>
    
     <!-- 分页查询已上架商品信息(只查商品，不查询多规格) -->
    <select id="getCoonShopProductAddedPage" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*
		  from
          <!-- (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime,s.order,s.is_new,p.shelves -->
          (SELECT p.id as goods_id,p.name,p.name_en,p.type,p.logo,p.sales,p.price as jg,p.divide,p.createtime,s.order,s.is_new,p.shelves
          FROM coon_shop_product s
          inner join cool_product p on p.id = s.p_id and p.shelves = 0
          <if test="stock != null and stock !=''">
          	inner join 
          	(select distinct goods_id from cool_product_gg where 1=1 
	          	<if test="stock =='1'.toString()" >
	                 and stock>0 
	          </if>  ) g on g.goods_id = p.id
         </if>
          left join (select ifnull(count(1),0) as count,g_id from cool_product_review group by g_id) r on r.g_id = s.p_id
          <!-- left join cool_product_gg g on g.goods_id = p.id  
          where g.stock > 0 and s.added = 1 --> 
          where s.added = 1
          <if test="type != null">
          	and p.type= #{type}
          </if>
          <if test="sId != null and sId != ''">
          	and s.s_id = #{sId,jdbcType=VARCHAR}
          </if>
          <if test="isNew != null and isNew != ''">
          	and s.is_new = #{isNew,jdbcType=VARCHAR}
          </if>
          <if test="name != null and name != ''">
          	and (p.name  like CONCAT(CONCAT('%', #{name}), '%')  or p.name_en  like CONCAT(CONCAT('%', #{name}), '%'))
          </if>
         <!-- 该字符串由两位组成 第一位：1:佣金  2：售价 3:销量 4:评价；第二位：1：升序  2：降序 默认降序 -->
          <if test="orderBy == '11'.toString()">
          	order by ifnull(p.fav_price,p.price) * p.divide asc) a
          </if>
          <if test="orderBy == '12'.toString()">
          	order by ifnull(p.fav_price,p.price) * p.divide desc) a
          </if>
          <if test="orderBy == '21'.toString()">
          	order by ifnull(p.fav_price,p.price) asc) a
          </if>
          <if test="orderBy == '22'.toString()">
          	order by ifnull(p.fav_price,p.price) desc) a
          </if>
          <if test="orderBy == '31'.toString()">
            order by p.sales asc) a
          </if>
          <if test="orderBy == '32'.toString()">
            order by p.sales desc) a
          </if>
          <if test="orderBy == '41'.toString()">
            order by r.count asc) a
          </if>
          <if test="orderBy == '42'.toString()">
            order by r.count desc) a
          </if>
          <if test="orderBy == '99'.toString()">
            order by s.order asc) a
          </if>
    </select>
    
    <!-- 分页查询已上架商品数量(只查商品，不查询多规格) -->
    <select id="getCoonShopProductAddedPageCount" resultType="java.lang.Integer" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select count(*)
		  from
          <!-- (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime,s.order,s.is_new,p.shelves -->
          (SELECT p.id as goods_id,p.name,p.name_en,p.type,p.logo,p.sales,p.price as jg,p.divide,p.createtime,s.order,s.is_new,p.shelves
          FROM coon_shop_product s
          inner join cool_product p on p.id = s.p_id and p.shelves = 0
          <if test="stock != null and stock !=''">
          	inner join 
          	(select distinct goods_id from cool_product_gg where 1=1 
	          	<if test="stock =='1'.toString()" >
	                 and stock>0 
	          </if>  ) g on g.goods_id = p.id
         </if>
          <!-- left join cool_product_gg g on g.goods_id = p.id  
          where g.stock > 0 and s.added = 1 --> 
          where s.added = 1           
          <if test="sId != null and sId != ''">
          	and s.s_id = #{sId,jdbcType=VARCHAR}
          </if>
          <if test="isNew != null and isNew != ''">
          	and s.is_new = #{isNew,jdbcType=VARCHAR}
          </if>
          order by s.order) a
    </select>
    
    <!-- 分页查询未上架商品信息 -->
    <select id="getCoonShopProductNoAddedListPage" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
          select a.*,ifnull(b.salesMonth,0)
		  from
          (SELECT g.id,g.goods_id,p.name,p.name_en,p.type,p.logo,g.gg,g.jg,g.cxjg,g.xsjg,g.sales,g.drp_price,p.divide,p.createtime
          FROM cool_product_gg g
          left join cool_product p on g.goods_id = p.id
          where g.stock > 0  and not exists(select 'x' from coon_shop_product where s_id = #{sId,jdbcType=VARCHAR} and added = 0 )
          ) a
          left join
			(SELECT i.gid,sum(i.count) as salesMonth  from cool_order_item i
			inner join cool_order o on o.order_no = i.order_no 
			where left(o.createtime,7) = left(now(),7) and (o.state=0 or o.state=1 or o.state=2 or o.state=3 or o.state=1 or o.state=11)
			 group by  i.gid) b on b.gid = a.id
    </select> 
    
    <!-- 分页查询未上架商品信息(只查商品，不查询多规格) -->
    <select id="getCoonShopProductNoAddedPage" resultMap="CoonShopProductInfoMap" parameterType="com.isell.service.shop.po.CoonShopProductParam">
		  SELECT p.id as goods_id,p.name,p.name_en,p.type,p.logo,p.price as jg,p.sales,p.divide,p.createtime
		  FROM cool_product p 
          where p.shelves = 0 
          	<if test="name != null and name!= ''">
          		and (p.name  like CONCAT(CONCAT('%', #{name}), '%')  or p.name_en  like CONCAT(CONCAT('%', #{name}), '%'))
          	</if>          	
          	and not exists(select 'x' from coon_shop_product s where s.s_id = #{sId,jdbcType=VARCHAR} and s.added = 1 and  s.p_id = p.id)	
    </select> 
    
    <!-- 根据酷店主键和商品主键获取上架店铺数 -->
    <select id="getCoonShopProductAddedCountByGoodsId" resultType="java.lang.Integer">
          SELECT ifnull(count(1),0) FROM coon_shop_product 
          where p_id = #{pId,jdbcType=VARCHAR}  and added = 1
    </select>
    
    <!-- 根据商品主键和酷店主键获取上架数 -->
    <select id="getCoonShopProductAddedCountByGoodsIdAndShopId" resultType="java.lang.Integer">
          SELECT ifnull(count(1),0) FROM coon_shop_product 
          where p_id = #{pId,jdbcType=VARCHAR} and s_id =  #{sId,jdbcType=VARCHAR} and added = 1
    </select>
    
    <!-- 根据酷店最大的商品排序号 -->
    <select id="getMaxOrderByShopId" resultType="java.lang.Integer">
          select MAX(`order`) from coon_shop_product where s_id =  #{sId,jdbcType=VARCHAR} 
    </select>
    
    <!-- 根据酷店最大的商品排序号 -->
    <select id="getCoonShopProductList" resultMap="BaseResultMap">
          select * from coon_shop_product 
          where s_id =  #{sId,jdbcType=VARCHAR} 
          		and `order` <![CDATA[ >= ]]> #{pxh ,jdbcType=INTEGER} 
          		and p_id  <![CDATA[ != ]]> #{pId,jdbcType=VARCHAR}  
   		  order by `order` asc
    </select>
    
    <select id="findAllCoonShopProduct" resultMap="BaseResultMap">
          SELECT * FROM coon_shop_product 
    </select>
    
    <!-- 根据条件查询 -->
    <select id="getCoonShopProduct" resultMap="BaseResultMap" parameterType="com.isell.service.shop.vo.CoonShopProduct">
          SELECT * FROM coon_shop_product 
          where 1=1 
          <if test="pId != null and pId != ''" >
              and p_id = #{pId,jdbcType=VARCHAR}
          </if>
          <if test="sId != null and sId != ''" >
              and s_id = #{sId,jdbcType=VARCHAR}
          </if>          
    </select>
    
    <delete id="deleteCoonShopProduct">
        DELETE
        FROM
             coon_shop_product
        WHERE            
            id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="saveCoonShopProduct" parameterType="com.isell.service.shop.vo.CoonShopProduct" >
        INSERT INTO coon_shop_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="pId != null" >
                p_id,
            </if>
            <if test="added != null" >
                added,
            </if>
            <if test="sId != null" >
                s_id,
            </if>
            <if test="qrCode != null" >
                qr_code,
            </if>
            <if test="brokerage != null" >
                brokerage,
            </if>
             <if test="order != null" >
                `order`,
            </if>
             <if test="isNew != null" >
                is_new,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if> 
            <if test="pId != null" >
                #{pId,jdbcType=VARCHAR},
            </if> 
            <if test="added != null" >
                #{added,jdbcType=BIT},
            </if> 
            <if test="sId != null" >
                #{sId,jdbcType=VARCHAR},
            </if> 
            <if test="qrCode != null" >
                #{qrCode,jdbcType=VARCHAR},
            </if> 
            <if test="brokerage != null" >
                #{brokerage,jdbcType=DECIMAL},
            </if> 
            <if test="order != null" >
                #{order,jdbcType=INTEGER},
             </if>
            <if test="isNew != null" >
                #{isNew,jdbcType=VARCHAR},
            </if> 
        </trim>
    </insert>

    <update id="updateCoonShopProduct" parameterType="com.isell.service.shop.vo.CoonShopProduct" >
        UPDATE coon_shop_product
        <set>
            <if test="id != null" >
                id = #{id,jdbcType=VARCHAR},
            </if>
            <if test="pId != null" >
                p_id = #{pId,jdbcType=VARCHAR},
            </if>
            <if test="added != null" >
                added = #{added,jdbcType=BIT},
            </if>
            <if test="sId != null" >
                s_id = #{sId,jdbcType=VARCHAR},
            </if>
            <if test="qrCode != null" >
                qr_code = #{qrCode,jdbcType=VARCHAR},
            </if>
            <if test="brokerage != null" >
                brokerage = #{brokerage,jdbcType=DECIMAL},
            </if>
            <if test="order != null" >
                `order` = #{order,jdbcType=INTEGER},
            </if>
            <if test="isNew != null" >
                is_new = #{isNew,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE 
            id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>