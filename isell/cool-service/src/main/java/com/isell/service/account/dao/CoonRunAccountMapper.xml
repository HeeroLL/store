<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isell.service.account.dao.CoonRunAccountMapper">
    <resultMap id="BaseResultMap" type="com.isell.service.account.vo.CoonRunAccount">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee" jdbcType="DECIMAL" property="fee"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="serial_number" jdbcType="VARCHAR" property="serialNumber"/>
        <result column="withdraw_state" jdbcType="INTEGER" property="withdrawState"/>
        <result column="withdraw_type" jdbcType="INTEGER" property="withdrawType"/>
        <result column="withdraw_name" jdbcType="VARCHAR" property="withdrawName"/>
        <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime"/>
        <result column="withdraw_num" jdbcType="VARCHAR" property="withdrawNum"/>
        <result column="batch_no" jdbcType="VARCHAR" property="batchNo"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="maker" jdbcType="VARCHAR" property="maker"/>
        <result column="is_freeze" jdbcType="TINYINT" property="isFreeze"/>
        <result column="freeze_time" jdbcType="TIMESTAMP" property="freezeTime"/>
        <result column="shop_id" jdbcType="VARCHAR" property="shopId"/>
        <result column="shop_name" jdbcType="VARCHAR" property="shopName"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
        <result column="devide" jdbcType="VARCHAR" property="devide"/>
    </resultMap>
    <select id="getCoonRunAccountById" resultMap="BaseResultMap">
        SELECT
            *
        FROM
             coon_run_account
        WHERE            
            id = #{id,jdbcType=VARCHAR}
    </select>
    
    <!-- 获取账单金额 -->
    <select id="getSumAmount" resultType="java.math.BigDecimal">
        SELECT
            ifnull(sum(amount),0)
        FROM
             coon_run_account
        WHERE            
            shop_id = #{shopId,jdbcType=VARCHAR}
            and (create_time between #{beginTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR})
            and type = 0 and is_freeze = 0
    </select>
    
    <!-- 获取昨日收益 -->
    <select id="getYesterdayAmount" resultType="java.math.BigDecimal">
        SELECT
            ifnull(sum(amount),0)
        FROM
             coon_run_account
        WHERE            
            shop_id = #{shopId,jdbcType=VARCHAR}
            and (create_time between #{beginTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR})
            and type = 0
    </select>
    
    <!-- 获取已退款金额 -->
    <select id="getTkAmount" resultType="java.math.BigDecimal">
        SELECT
            ifnull(sum(amount),0)
        FROM
             coon_run_account
        WHERE            
            shop_id = #{shopId,jdbcType=VARCHAR}
            and type = 1 and withdraw_state = 5
    </select>
    
    <!-- 根据条件查询 -->
    <select id="findCoonRunAccountList" resultMap="BaseResultMap" parameterType="com.isell.service.account.vo.CoonRunAccount">
          SELECT * FROM coon_run_account 
          where 1=1
          <if test="createTime != null" >
                and create_time like left(#{createTime,jdbcType=TIMESTAMP},10) || '%'
            </if>
            <if test="userId != null and userId != ''" >
                and user_id = #{userId,jdbcType=VARCHAR}
            </if>
    </select>
    
    <!-- 分页查询 -->
    <select id="findCoonRunAccountListPage" resultMap="BaseResultMap" parameterType="com.isell.service.account.vo.CoonRunAccount" >
          SELECT * FROM coon_run_account 
          where (is_del = 0 or is_del is null) 
          <if test="userId != null">
          	and user_id = #{userId,jdbcType=INTEGER}
          </if>
          <if test="type != null">
          	and type = #{type,jdbcType=INTEGER}
          </if>
          <if test="withdrawState != null">
          	and withdraw_state = #{withdrawState,jdbcType=INTEGER}
          </if>
          <if test="isFreeze == 0">
          	and (is_freeze = #{isFreeze,jdbcType=TINYINT} or is_freeze is null)
          </if>
          <if test="isFreeze == 1">
          	and is_freeze = #{isFreeze,jdbcType=TINYINT}
          </if>
          order by create_time desc
    </select>
    
    <select id="findAllCoonRunAccount" resultMap="BaseResultMap">
          SELECT * FROM coon_run_account 
    </select>
    
    <delete id="deleteCoonRunAccount">
        DELETE
        FROM
             coon_run_account
        WHERE            
            id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="saveCoonRunAccount" parameterType="com.isell.service.account.vo.CoonRunAccount" >
        INSERT INTO coon_run_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="amount != null" >
                amount,
            </if>
            <if test="fee != null" >
                fee,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="serialNumber != null" >
                serial_number,
            </if>
            <if test="withdrawState != null" >
                withdraw_state,
            </if>
            <if test="withdrawType != null" >
                withdraw_type,
            </if>
            <if test="withdrawName != null" >
                withdraw_name,
            </if>
            <if test="finishTime != null" >
                finish_time,
            </if>
            <if test="withdrawNum != null" >
                withdraw_num,
            </if>
            <if test="batchNo != null" >
                batch_no,
            </if>
            <if test="orderNo != null" >
                order_no,
            </if>
            <if test="maker != null" >
                maker,
            </if>
            <if test="isFreeze != null" >
                is_freeze,
            </if>
            <if test="freezeTime != null" >
                freeze_time,
            </if>
            <if test="shopId != null" >
                shop_id,
            </if>
            <if test="shopName != null" >
                shop_name,
            </if>
            <if test="isDel != null" >
                is_del,
            </if>
            <if test="devide != null" >
                devide,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if> 
            <if test="userId != null" >
                #{userId,jdbcType=VARCHAR},
            </if> 
            <if test="type != null" >
                #{type,jdbcType=INTEGER},
            </if> 
            <if test="amount != null" >
                #{amount,jdbcType=DECIMAL},
            </if> 
            <if test="fee != null" >
                #{fee,jdbcType=DECIMAL},
            </if> 
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if> 
            <if test="serialNumber != null" >
                #{serialNumber,jdbcType=VARCHAR},
            </if> 
            <if test="withdrawState != null" >
                #{withdrawState,jdbcType=INTEGER},
            </if> 
            <if test="withdrawType != null" >
                #{withdrawType,jdbcType=INTEGER},
            </if> 
            <if test="withdrawName != null" >
                #{withdrawName,jdbcType=VARCHAR},
            </if> 
            <if test="finishTime != null" >
                #{finishTime,jdbcType=TIMESTAMP},
            </if> 
            <if test="withdrawNum != null" >
                #{withdrawNum,jdbcType=VARCHAR},
            </if> 
            <if test="batchNo != null" >
                #{batchNo,jdbcType=VARCHAR},
            </if> 
            <if test="orderNo != null" >
                #{orderNo,jdbcType=VARCHAR},
            </if> 
            <if test="maker != null" >
                #{maker,jdbcType=VARCHAR},
            </if> 
            <if test="isFreeze != null" >
                #{isFreeze,jdbcType=TINYINT},
            </if> 
            <if test="freezeTime != null" >
                #{freezeTime,jdbcType=TIMESTAMP},
            </if> 
            <if test="shopId != null" >
                #{shopId,jdbcType=VARCHAR},
            </if> 
            <if test="shopName != null" >
                #{shopName,jdbcType=VARCHAR},
            </if> 
            <if test="isDel != null" >
                #{isDel,jdbcType=TINYINT},
            </if> 
            <if test="devide !=null">
              #{devide,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateCoonRunAccount" parameterType="com.isell.service.account.vo.CoonRunAccount" >
        UPDATE coon_run_account
        <set>
            <if test="id != null" >
                id = #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="fee != null" >
                fee = #{fee,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="serialNumber != null" >
                serial_number = #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="withdrawState != null" >
                withdraw_state = #{withdrawState,jdbcType=INTEGER},
            </if>
            <if test="withdrawType != null" >
                withdraw_type = #{withdrawType,jdbcType=INTEGER},
            </if>
            <if test="withdrawName != null" >
                withdraw_name = #{withdrawName,jdbcType=VARCHAR},
            </if>
            <if test="finishTime != null" >
                finish_time = #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="withdrawNum != null" >
                withdraw_num = #{withdrawNum,jdbcType=VARCHAR},
            </if>
            <if test="orderNo != null" >
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="maker != null" >
                maker = #{maker,jdbcType=VARCHAR},
            </if>
            <if test="isFreeze != null" >
                is_freeze = #{isFreeze,jdbcType=TINYINT},
            </if>
            <if test="freezeTime != null" >
                freeze_time = #{freezeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="shopId != null" >
                shop_id = #{shopId,jdbcType=VARCHAR},
            </if>
            <if test="shopName != null" >
                shop_name = #{shopName,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null" >
                is_del = #{isDel,jdbcType=TINYINT},
            </if>
            <if test="devide != null" >
                devide = #{devide,jdbcType=VARCHAR},
            </if>
            <if test="batchNo != null" >
                batch_no = #{batchNo,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE 
            id = #{id,jdbcType=VARCHAR}
    </update>
    
    <select id="findByEndDate" parameterType="java.lang.String" resultMap="BaseResultMap" >
    	select * from coon_run_account where freeze_time <![CDATA[<]]> #{date}
    		and is_freeze=1
    </select>
    
  	<update id="runAccount"  parameterType="map">
  		update coon_run_account set is_freeze = 1
  		where 
        <foreach collection="runAccount" item="items" open="" close="" separator="OR">  
			id = #{items.id}
	  </foreach>  
    </update>
</mapper>