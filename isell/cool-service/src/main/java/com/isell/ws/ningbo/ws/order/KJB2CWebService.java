package com.isell.ws.ningbo.ws.order;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.6
 * 2015-11-03T18:02:13+08:00
 * Generated source version: 3.0.6
 * 
 */
@WebServiceClient(name = "KJB2CWebService", 
                  wsdlLocation = "http://nxybfx.erp8.meetok.com/Areas/KJB2C/WebService/KJB2CWebService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class KJB2CWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "KJB2CWebService");
    public final static QName KJB2CWebServiceSoap = new QName("http://tempuri.org/", "KJB2CWebServiceSoap");
    public final static QName KJB2CWebServiceSoap12 = new QName("http://tempuri.org/", "KJB2CWebServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://nxybfx.erp8.meetok.com/Areas/KJB2C/WebService/KJB2CWebService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(KJB2CWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://nxybfx.erp8.meetok.com/Areas/KJB2C/WebService/KJB2CWebService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public KJB2CWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public KJB2CWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public KJB2CWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    /**
     *
     * @return
     *     returns KJB2CWebServiceSoap
     */
    @WebEndpoint(name = "KJB2CWebServiceSoap")
    public KJB2CWebServiceSoap getKJB2CWebServiceSoap() {
        return super.getPort(KJB2CWebServiceSoap, KJB2CWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KJB2CWebServiceSoap
     */
    @WebEndpoint(name = "KJB2CWebServiceSoap")
    public KJB2CWebServiceSoap getKJB2CWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(KJB2CWebServiceSoap, KJB2CWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns KJB2CWebServiceSoap
     */
    @WebEndpoint(name = "KJB2CWebServiceSoap12")
    public KJB2CWebServiceSoap getKJB2CWebServiceSoap12() {
        return super.getPort(KJB2CWebServiceSoap12, KJB2CWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns KJB2CWebServiceSoap
     */
    @WebEndpoint(name = "KJB2CWebServiceSoap12")
    public KJB2CWebServiceSoap getKJB2CWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(KJB2CWebServiceSoap12, KJB2CWebServiceSoap.class, features);
    }

}
