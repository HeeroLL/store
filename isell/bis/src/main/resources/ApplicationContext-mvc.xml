<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="com.sell.*" />
	
	<!-- 配置requestMapping -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<bean class="com.sell.bis.sys.SecurityInterceptor">
					<!-- 是否忽略校验 -->
					<property name="ignoreValidation" value="${security.ip.ignore-validation}" />
					<!-- 忽略校验的包 -->
					<property name="ignorePackageList">
						<list>
							<value>com.sell.ei.logistics.ecm.controller</value>
							<value>com.sell.ei.pay.weixin.controller</value>
						</list>
					</property>
					<!-- 配置允许访问的ip -->
					<property name="permissionIpList">
						<list>
							<value>127.0.0.1</value>
							<value>localhost</value>
							<value>0:0:0:0:0:0:0:1</value>
						</list>
					</property>
				</bean>
				<bean class="com.sell.bis.sys.LogInterceptor" />
			</list>
		</property>
	</bean>

	<!-- 配置SpringMVC @ResponseBody和@RequestBody注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<!-- 请求参数信息转换 -->
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="stringHttpMessageConverter" />
				<!-- json转换器 -->
				<ref bean="jsonHttpMessageConverter" />
				<!-- xml转换器 -->
				<ref bean="marshallingHttpMessageConverter" />
			</util:list>
		</property>
	</bean>

	<!-- json转换器 -->
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- 配置转换器运行的Content-Type集合，只有在集合中的类型才有可能被该转换器做转换 -->
				<value>application/json;charset=utf-8</value>
				<value>text/plain;charset=UTF-8</value>
				<value>application/x-www-form-urlencoded;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
		<!-- 设置一个自定义 objectMapper，让Date类型的数据转成yyyy-MM-dd HH:mm:ss -->
		<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>

	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
		<!-- 属性为null则不序列化 -->
		<property name="serializationInclusion">
			<value type="org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion">NON_NULL</value>
		</property>
		<property name="dateFormat">
			<bean class="java.text.SimpleDateFormat">
				<constructor-arg value="yyyy-MM-dd HH:mm:ss" />
			</bean>
		</property>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonObjectMapper" />
		<property name="targetMethod" value="configure" />
		<!-- 忽略未识别的参数(解决json串中多属性，而类中又未定义的情况) -->
		<property name="arguments">
			<list>
				<value type="org.codehaus.jackson.map.DeserializationConfig.Feature">FAIL_ON_UNKNOWN_PROPERTIES</value>
				<value>false</value>
			</list>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- xml转换器 -->
	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="jaxb2Marshaller" />
		<property name="unmarshaller" ref="jaxb2Marshaller" />
		<property name="supportedMediaTypes">
			<list>
				<value>application/xml;charset=utf-8</value>
				<value>text/xml;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 配置最终展现的视图为混合视图 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<!-- 根据请求头Accept选择对应的视图 -->
			<list>
				<!-- json视图 -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- xml视图 -->
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller" ref="jaxb2Marshaller" />
				</bean>
			</list>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="suffix">
						<value>.ftl</value>
					</property>
					<property name="contentType" value="text/html;charset=UTF-8"></property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- Freemarker配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>

	<!-- xStream的xml和java对象互转方式，autodetectAnnotations=true允许注解的方式进行配置，annotatedClasses配置需要转换的bean的class 
		<bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller"> 
		<property name="autodetectAnnotations" value="true" /> <property name="annotatedClasses"> 
		<list> <value>com.sell.demo.Person</value> <value>com.sell.demo.Address</value> 
		</list> </property> </bean> -->
	<!-- jaxb2的xml和java对象互转方式，classesToBeBound配置需要转换的bean的class -->
	<!-- jaxb2采用jdk自带的xml和java对象的互转实现，可能和一些低版本jar包冲突（例如xPath依赖的jaxen低版本有可能会和jaxb2冲突），要特别注意 -->
	<bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<array>
				<value>com.sell.demo.Person</value>
				<value>com.sell.demo.Address</value>
				<value>com.sell.ei.pay.weixin.bean.PayResultInfo</value>
			</array>
		</property>
	</bean>

	<import resource="ApplicationContext.xml" />
</beans>  
